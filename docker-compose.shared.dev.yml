services:
  # Dummy Backend API (Node.js/NestJS) - Development
  dummy-api:
    build:
      context: ./smart-dummy
      dockerfile: Dockerfile.dev
    container_name: dummy-api-dev
    ports:
      - "3000:3000"
    env_file:
      - ./.env.deploy
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./smart-dummy:/app
      - /app/node_modules
    depends_on:
      deploy-postgres:
        condition: service_healthy
    command: npm run start:dev
    networks:
      - backend-network
  # Ololo Backend (Go) - Development
  ololo-api:
    build:
      context: ./smart-backend
      dockerfile: Dockerfile
      target: dev
    container_name: ololo-api-dev
    ports:
      - "8080:8080"
    env_file:
      - ./.env.deploy
    environment:
      - ENV=development
      - PORT=8080
    volumes:
      - ./smart-backend:/app
    depends_on:
      deploy-postgres:
        condition: service_healthy
    command: air -c .air.toml
    networks:
      - backend-network
  deploy-postgres:
    image: postgres:16-alpine
    container_name: deploy-postgres-dev
    env_file:
      - ./.env.deploy
    ports:
      - "5434:5432"
    volumes:
      - deploy_postgres_dev_data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  deploy_postgres_dev_data:

networks:
  backend-network:
    driver: bridge
